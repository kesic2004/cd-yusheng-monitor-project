package com.model.device.mapper;

import com.baomidou.mybatisplus.core.mapper.BaseMapper;
import com.model.device.entity.Device;
import com.model.device.entity.DeviceEx;
import java.util.List;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;

public interface DeviceMapper extends BaseMapper<Device> {
   @Select({"SELECT d.id as id, d.sid as sid, d.clientid as clientid, d.name as name, d.addresscode as addresscode, d.detail as detail, d.state as state, d.machineno, d.chan1 as chan1, d.chan2 as chan2, d.chan3 as chan3, d.chan4 as chan4, d.chan5 as chan5, d.chan6 as chan6, d.chan7 as chan7, d.chan8 as chan8, d.chan9 as chan9, d.chan10 as chan10, d.chan11 as chan11, d.chan12 as chan12, d.chan13 as chan13, d.chan14 as chan14, d.chan15 as chan15, d.chan16 as chan16, d.key1 as key1, d.key2 as key2, d.key3 as key3, d.key4 as key4, d.key5 as key5, d.key6 as key6, d.key7 as key7, d.key8 as key8, d.key9 as key9, d.key10 as key10, d.key11 as key11, d.key12 as key12, d.key13 as key13, d.key14 as key14, d.key15 as key15, d.key16 as key16, d.zero1 as zero1, d.zero2 as zero2, d.zero3 as zero3, d.zero4 as zero4, d.zero5 as zero5, d.zero6 as zero6, d.zero7 as zero7, d.zero8 as zero8, d.zero9 as zero9, d.zero10 as zero10, d.zero11 as zero11, d.zero12 as zero12, d.zero13 as zero13, d.zero14 as zero14, d.zero15 as zero15, d.zero16 as zero16, d.lx1 as lx1, d.lx2 as lx2, d.lx3 as lx3, d.lx4 as lx4, d.lx5 as lx5, d.lx6 as lx6, d.lx7 as lx7, d.lx8 as lx8, d.lx9 as lx9, d.lx10 as lx10, d.lx11 as lx11, d.lx12 as lx12, d.lx13 as lx13, d.lx14 as lx14, d.lx15 as lx15, d.lx16 as lx16 FROM device d, province p, city c, station s  WHERE  p.id = c.pid And c.id = s.cid And s.id = d.sid And p.code = #{province} And c.code = #{city} And s.code = #{station} And d.addresscode = #{addresscode} And d.machineno = #{machineno} LIMIT 1 "})
   Device findDevice(@Param("addresscode") Integer addresscode, @Param("province") Integer province, @Param("city") Integer city, @Param("station") Integer station, @Param("machineno") Integer machineno);

   @Select({"SELECT d.id as id, d.sid as sid, d.clientid as clientid, d.name as name, d.addresscode as addresscode, d.detail as detail, d.state as state, d.machineno, d.chan1 as chan1, d.chan2 as chan2, d.chan3 as chan3, d.chan4 as chan4, d.chan5 as chan5, d.chan6 as chan6, d.chan7 as chan7, d.chan8 as chan8, d.chan9 as chan9, d.chan10 as chan10, d.chan11 as chan11, d.chan12 as chan12, d.chan13 as chan13, d.chan14 as chan14, d.chan15 as chan15, d.chan16 as chan16, d.key1 as key1, d.key2 as key2, d.key3 as key3, d.key4 as key4, d.key5 as key5, d.key6 as key6, d.key7 as key7, d.key8 as key8, d.key9 as key9, d.key10 as key10, d.key11 as key11, d.key12 as key12, d.key13 as key13, d.key14 as key14, d.key15 as key15, d.key16 as key16, d.zero1 as zero1, d.zero2 as zero2, d.zero3 as zero3, d.zero4 as zero4, d.zero5 as zero5, d.zero6 as zero6, d.zero7 as zero7, d.zero8 as zero8, d.zero9 as zero9, d.zero10 as zero10, d.zero11 as zero11, d.zero12 as zero12, d.zero13 as zero13, d.zero14 as zero14, d.zero15 as zero15, d.zero16 as zero16, d.lx1 as lx1, d.lx2 as lx2, d.lx3 as lx3, d.lx4 as lx4, d.lx5 as lx5, d.lx6 as lx6, d.lx7 as lx7, d.lx8 as lx8, d.lx9 as lx9, d.lx10 as lx10, d.lx11 as lx11, d.lx12 as lx12, d.lx13 as lx13, d.lx14 as lx14, d.lx15 as lx15, d.lx16 as lx16, s.zdbh as zdbh FROM device d, province p, city c, station s  WHERE  p.id = c.pid And c.id = s.cid And s.id = d.sid And p.code = #{province} And c.code = #{city} And s.code = #{station} And d.addresscode = #{addresscode} AND d.clientid = #{clientid} LIMIT 1 "})
   Device findDeviceByClientIdAndAddress(@Param("clientid") Integer clientid, @Param("addresscode") Integer addresscode, @Param("province") Integer province, @Param("city") Integer city, @Param("station") Integer station);

   List<DeviceEx> selectAll();
}
